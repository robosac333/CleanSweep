name: Run Unit Test and Upload Coverage Report

on:
  push:
    branches: [ "main", "sachin_updates" , "navdeep_updates"]
  pull_request:
    branches: [ "main" ]
    types: [opened]
  workflow_dispatch:

jobs:
  build-run-upload:
    runs-on: ubuntu-22.04
    
    steps:
      - uses: actions/checkout@v3
        with:
          path: src/cleansweep  # Change checkout path to match ROS workspace structure

      # Install ROS 2 Humble and dependencies
      - name: Install dependencies
        run: |
          # Add ROS 2 apt repository
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository universe
          curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          
          # Install required packages
          sudo apt-get update
          sudo apt-get install -y \
            ros-humble-ros-base \
            python3-colcon-common-extensions \
            ros-humble-cv-bridge \
            ros-humble-ament-cmake-gtest \
            doxygen \
            lcov \
            gcovr \
            libopencv-dev

      # Build and test
      - name: Build and Test
        run: |
          source /opt/ros/humble/setup.bash
          colcon build \
            --cmake-args \
            -DCMAKE_BUILD_TYPE=Debug \
            -DWANT_COVERAGE=ON
          
          # Run tests
          source install/setup.bash
          colcon test --packages-select cleansweep --event-handlers console_direct+
          
          # Generate coverage report
          cd build/cleansweep
          
          # Clear previous coverage data
          find . -name "*.gcda" -delete
          lcov --zerocounters --directory .
          
          # Run tests again for coverage
          cd ../..
          colcon test --packages-select cleansweep
          cd build/cleansweep
          
          # Capture coverage data
          lcov --directory . --capture --output-file coverage.info
          
          # Filter coverage data
          lcov \
            --remove coverage.info \
            '/usr/*' '/opt/*' '*/test/*' '*/build/*' '*/install/*' '*_deps/*' '*/ros/*' \
            --output-file coverage.filtered
          
          # Extract only project files
          lcov \
            --extract coverage.filtered \
            '${{ github.workspace }}/src/cleansweep/src/*' \
            '${{ github.workspace }}/src/cleansweep/include/cleansweep/*' \
            --output-file coverage.final
          
          # Generate HTML report
          genhtml coverage.final \
            --output-directory coverage_report \
            --title "Coverage Report" \
            --legend \
            --show-details

      # Upload coverage results
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/cleansweep/coverage.final
          fail_ci_if_error: true
          verbose: true
          disable_search: true
          plugin: none
          
      # Upload coverage report as artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: build/cleansweep/coverage_report